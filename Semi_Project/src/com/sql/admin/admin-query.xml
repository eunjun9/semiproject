<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM
"http://java.sun.com/dtd/properties.dtd">
<properties>

	<!-- 게시글 신고 접수 -->
	<entry key="insertReport">
		INSERT
		  INTO REPORT
		(
			REPORT_NUM
		  , REPORT_REASON
		  , NOTICE_NUM
		  , USER_ID
		  , REPORT_DATE
		)
		VALUES
		(
			SEQ_REPORT_NUM.NEXTVAL
		  , ?
		  , ?
		  , ?
		  , DEFAULT
		)
	</entry>

	<!-- 관리자페이지 정산내역 조회  -->
	<entry key="payrollSelect">
		SELECT
		        N.NOTICE_TITLE
		      , M.USER_NAME
		      , C.C_WRITER
		      , P.NOTICE_NUM
		      , SUM(C.C_PRICE) AS TOTAL
		      , ((SUM(C_PRICE) - (SUM(C_PRICE) * 0.2))) AS TAXTOTAL
		   FROM NOTICE N, MEMBER_INFO M, CLASS C FULL OUTER JOIN PAYMENT P
		     ON C.NOTICE_NUM = P.NOTICE_NUM
		  WHERE N.NOTICE_NUM = C.NOTICE_NUM
		    AND C.C_WRITER = M.USER_ID
		    AND EXTRACT(YEAR FROM P.PAY_DATE) = ?
		    AND EXTRACT(MONTH FROM P.PAY_DATE) = ?
		    AND P.PAY_CANCLE = 'Y'
		  GROUP BY P.NOTICE_NUM, N.NOTICE_TITLE, M.USER_NAME, C.C_WRITER
	</entry>
	
	<entry key="payrollYear">
		SELECT
				EXTRACT(YEAR FROM PAY_DATE) AS OPTIONYEAR
		   FROM PAYMENT
		  GROUP BY EXTRACT(YEAR FROM PAY_DATE)
		  ORDER BY EXTRACT(YEAR FROM PAY_DATE)
	</entry>
	
	<!-- 필터 별 매출조회 -->
	<entry key="selectClassList">
		SELECT
		       NOTICE_TITLE
		     , SUM(C_PRICE) AS PTOTAL
		     , COUNT(NOTICE_NUM) AS PCOUNT
		  FROM PAYMENT
		  LEFT JOIN NOTICE USING(NOTICE_NUM)
		  LEFT JOIN CLASS USING(NOTICE_NUM)
		 WHERE PAY_CANCLE = 'Y'
		 GROUP BY NOTICE_TITLE
	</entry>
	
	<entry key="selectDateList">
		SELECT
		       TO_CHAR(PAY_DATE, 'YYYY-MM-DD') AS PDATE
		     , SUM(C_PRICE) AS PTOTAL
		     , COUNT(PAY_DATE) AS PCOUNT
		  FROM PAYMENT
		  LEFT JOIN NOTICE USING(NOTICE_NUM)
		  LEFT JOIN CLASS USING(NOTICE_NUM)
		 WHERE PAY_CANCLE = 'Y'
		 GROUP BY TO_CHAR(PAY_DATE, 'YYYY-MM-DD')
	</entry>
	
	<entry key="selectOptionList">
		SELECT
		       PAY_OPTION
		     , SUM(C_PRICE) AS PTOTAL
		     , COUNT(PAY_OPTION) AS PCOUNT
		  FROM PAYMENT
		  LEFT JOIN NOTICE USING(NOTICE_NUM)
		  LEFT JOIN CLASS USING(NOTICE_NUM)
		 WHERE PAY_CANCLE = 'Y'
		 GROUP BY PAY_OPTION
	</entry>

	<!-- 신고 내역 조회 -->
	<entry key="selectreportList">
		SELECT 
		        R.NOTICE_NUM
		      , N.NOTICE_TYPE
		      , N.NOTICE_TITLE
		      , N.USER_ID
		      , R.USER_ID
		      , REPORT_DATE
		      , REPORT_REASON
		   FROM REPORT R
		   JOIN NOTICE N ON(N.NOTICE_NUM = R.NOTICE_NUM)
		  WHERE REPORT_STATUS = 'Y'
		    AND NOTICE_STATUS = 'Y'
   	   ORDER BY REPORT_DATE ASC
	</entry>
	
	<entry key="selectmagazineList">
		SELECT 
		        R.NOTICE_NUM
		      , N.NOTICE_TYPE
		      , N.NOTICE_TITLE
		      , N.USER_ID 
              , R.USER_ID
		      , REPORT_DATE
		      , REPORT_REASON
		   FROM REPORT R
		   JOIN NOTICE N ON(N.NOTICE_NUM = R.NOTICE_NUM)
		  WHERE REPORT_STATUS = 'Y'
		    AND NOTICE_STATUS = 'Y'
		   	AND N.NOTICE_TYPE = '매거진'
   	   ORDER BY REPORT_DATE ASC
	</entry>
	
	<entry key="selectsocialingList">
		SELECT 
		        R.NOTICE_NUM
		      , N.NOTICE_TYPE
		      , N.NOTICE_TITLE
		      , N.USER_ID
		      , R.USER_ID
		      , REPORT_DATE
		      , REPORT_REASON
		   FROM REPORT R
		   JOIN NOTICE N ON(N.NOTICE_NUM = R.NOTICE_NUM)
		  WHERE REPORT_STATUS = 'Y'
		    AND NOTICE_STATUS = 'Y'
		   	AND N.NOTICE_TYPE = '소셜링'
   	   ORDER BY REPORT_DATE ASC
	</entry>
	
	<entry key="selectRefundList">
		SELECT
	          N.NOTICE_TITLE
	        , P.PAY_DATE
	        , R.REFUND_DATE
	        , P.USER_ID
	        , P.PAY_NUM
	        , C_PRICE
	        , R.REFUND_ACCOUNT
	        , R.BANK
	        , R.ACCOUNT_HOLDER
	        , R.REFUND_PROCESS
		FROM REFUND R
		JOIN NOTICE N ON (N.NOTICE_NUM = R.NOTICE_NUM)
		JOIN PAYMENT P ON (R.NOTICE_NUM = P.NOTICE_NUM)
		JOIN CLASS C ON (C.NOTICE_NUM = R.NOTICE_NUM)
		WHERE P.PAY_CANCLE = 'N'
		ORDER BY R.REFUND_DATE ASC
	</entry>
	
	<entry key="selectRefund">
			SELECT
				          N.NOTICE_TITLE
				        , P.PAY_DATE
				        , R.REFUND_DATE
				        , P.USER_ID
				        , P.PAY_NUM
				        , C_PRICE
				        , R.REFUND_ACCOUNT
				        , R.BANK
				        , R.ACCOUNT_HOLDER
			            , R.REFUND_PROCESS
			            , R.PAY_NUM
					FROM REFUND R
					JOIN NOTICE N ON (N.NOTICE_NUM = R.NOTICE_NUM)
					JOIN PAYMENT P ON (R.NOTICE_NUM = P.NOTICE_NUM)
					JOIN CLASS C ON (C.NOTICE_NUM = R.NOTICE_NUM)
					WHERE P.PAY_CANCLE = 'N'
			        and p.user_id = ?
					ORDER BY R.REFUND_DATE ASC
	</entry>
	
	<entry key="updateAdminRefund">
      UPDATE
            REFUND
         SET REFUND_ACCOUNT = ?
           , BANK = ?
           , ACCOUNT_HOLDER = ?
           , REFUND_PROCESS = ?
        WHERE PAY_NUM = ?
   </entry>
	
	<entry key="selectAdminRefund">
		SELECT
				          N.NOTICE_TITLE
				        , P.PAY_DATE
				        , R.REFUND_DATE
				        , P.USER_ID
				        , P.PAY_NUM
				        , C_PRICE
				        , R.REFUND_ACCOUNT
				        , R.BANK
				        , R.ACCOUNT_HOLDER
			            , R.REFUND_PROCESS
					FROM REFUND R
					JOIN NOTICE N ON (N.NOTICE_NUM = R.NOTICE_NUM)
					JOIN PAYMENT P ON (R.NOTICE_NUM = P.NOTICE_NUM)
					JOIN CLASS C ON (C.NOTICE_NUM = R.NOTICE_NUM)
					WHERE P.PAY_CANCLE = 'N'
			        and p.pay_num = ?
					ORDER BY R.REFUND_DATE ASC
				
	</entry>
	
</properties>